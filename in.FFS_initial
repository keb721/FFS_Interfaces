#############################
# P R E L I M I N A R I E S #
#############################

variable r uloop 5500

variable num equal 500

variable bln equal (10)
variable lA equal 11.5   # When the A basin is returned to

variable vrand equal (abs(5463+ceil(6.2*${r}+1.8)))
variable trand equal (abs(16342+round(7.36*${r}*cos(5.2*${r})+43.2)))

variable qcuto equal (1.432)

variable N equal 100    # Timestep for thermodumps

variable on equal ((${r}%${num})+1)
variable l0 equal (19+ceil(${r}/${num})*2)    # Interface variable - usually a range/above but here we want the exact value

log crystallisation_t${temp}_r${r}.log
#log nuc_run_melt${rnmlt}.log

units lj                  # Use reduced LJ style units
atom_style atomic         # Uncharged point particles
atom_modify map hash      # Needed for indexing of clusters etc
                          # Used to be able to find where atoms are in relation to each other.

# Define a lattice with which to populate the simulation cell. With units
# set to 'lj' the second argument to the lattice command is the reduced
# density rho* and the spacings are multiples of that required to acheive
# that density. Also define a simulation cell called 'box' in lattice units
# and fill it with atoms. Here we're creating a box which is ten lattice
# constants in each direction.
lattice fcc 1.0 spacing 1 1 1                 # All equal sizes - gives the right reduced density.
region box block 0 ${bln} 0 ${bln} 0 ${bln} units lattice # Defines a region, "box", in lattice units
create_box 1 box                              # Creates a simulation box as specified above,
                                              # with one type of atom
create_atoms 1 box                            # Creates particles on lattice points

# Set the mass of the first (and only) atom type.
mass 1 1.0

# Lennard-Jones interactions between particles, 3.5 sigma cut-off. Apply
# long range tail corrections to energy and pressure and set all coefficients
# to unity since we work in reduced units here. Note that this doesn't shift
# the potential such that it goes to zero at the cutoff. That would require
# pair_modify('shift', 'yes').
#pair_style lj/cut/gpu  3.5  # GPU version
pair_style lj/cut  3.5      # non-GPU version
pair_modify shift yes
pair_coeff 1  1  1.0  1.0   # Intearaction between 1 and 1 set with epsilon = 1 and sigma = 1

#############################
#   M E L T   S Y S T E M   #
#############################

velocity all create 2.4 ${vrand} mom yes dist gaussian # Assign velocities


timestep 0.002   # simulation timestep
thermo 100       # output thermodynamic data every 100 steps

# Define a fix  in this case with index 1 applied to all
# particles in the simulation. This fix is for simulations
# in the anisotropic NPT ensemble. Note that we use the MTK
# correction.

fix 1 all nph iso 5.68 5.68 0.5 mtk yes pchain 5 # Use NPT ensemble
fix 2 all temp/csvr 2.4 2.4 0.05 ${trand}

run 10000         # run for 10000 steps

unfix 1
unfix 2

# Equilibrate just above the melting temperature to avoid step fn in T
fix 1 all nph iso 5.68 5.68 0.5 mtk yes pchain 5 # Use NPT ensemble
fix 2 all temp/csvr 1.2 1.2 0.05 ${trand}

run 1000
unfix 1
unfix 2


# Small amount of linear quench
fix 1 all nph iso 5.68 5.68 0.5 mtk yes pchain 5 # Use NPT ensemble
fix 2 all temp/csvr 1.2 ${temp} 0.05 ${trand}
run 2000
unfix 2
unfix 1

#############################
# F R E E Z E  S Y S T E M  #
#############################

variable runnum equal 112000
variable totrun equal 113000
variable decorr equal 1000

# Define solid atoms. This closely follows ten Wolde  Ruiz-Montero and Frenkel  Faraday Discuss  1996  104  93-110
# Compute components of the per-atom q6 vector
compute q6 all orientorder/atom degrees 1 6 components 6 nnn NULL cutoff ${qcuto} # compute the Q6 parameter.
                                                                             # Use all neighbours within 1.3 unit cell.

# get number of connections
compute coord_number all coord/atom orientorder q6 0.5

# An atom is solid if it has 8 or more connections (of a possible 14)
variable is_solid atom c_coord_number>=8
group solid dynamic all var is_solid every ${N}   # Must be dynamic to update

# do clustering
compute cluster solid cluster/atom ${qcuto} # Create a cluster where all atoms within are solid and max 1.3 units from another member

# define chunks one chunk per cluster
compute clus_chunks solid chunk/atom c_cluster nchunk every compress yes  # Says which atoms are in which chunk

# count the size of each chunk
compute size_chunks solid property/chunk clus_chunks count


# Find the maximum entry in the vector of chunk sizes
variable max_n equal max(c_size_chunks)

# Thermo style which includes this variable
thermo_style custom step temp pe vol v_max_n

thermo ${N}  # Print the thermo information every 100 steps

# Reset the npt fix at a lower temperature (below freezing)
fix 1 all nph iso 5.68 5.68 0.5 mtk yes pchain 5 # Use NPT ensemble
fix 2 all temp/csvr ${temp} ${temp} 0.05 ${trand}

variable s equal (step)

#fix rnuntil all halt ${N} v_max_n >= 3800 error soft message no

label StartRun

variable on equal (${r}%${num}+1)
variable l0 equal (19+ceil(${r}/${num})*2)

fix cross all halt ${N} v_max_n == ${l0} error continue message no

run ${totrun}  upto # Run for this many steps

if "${s} < ${runnum}" then &
   "unfix cross" &
   "shell cd seed_${l0}" &
   "write_restart 4k_restart_${l0}_${on}.equil" &
   "shell cd ../" &
   "next r" &
   "run ${decorr}" &
   "fix back all halt ${N} v_max_n <= ${lA} error continue message no" &
   "run ${totrun} upto # Run for this many steps" &
   "unfix back" &
   "jump SELF StartRun"
   
clear  
jump SELF
